name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  lint_fmt:
    name: Lint and format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy

      - name: Install dav1d build dependencies
        run: sudo apt update && sudo apt install ninja-build meson nasm

      - name: Lint
        run: cargo clippy --all-features -- -D warnings

      - name: Lint (no threading or avif)
        run: cargo clippy --no-default-features --features default_formats -- -D warnings

      - name: Format
        run: cargo fmt -- --check

  build_test:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Build
        run: cargo build --features webp,bmp,tiff

      - name: Test
        run: cargo test --features webp,bmp,tiff

      - name: Build (no threading)
        run: cargo build --no-default-features --features default_formats

      - name: Test (no threading)
        run: cargo test --no-default-features --features default_formats

      - name: Build docs
        run: cargo doc --lib --no-deps
        env:
          RUSTDOCFLAGS: '--deny warnings'

  build_test_avif:
    name: Build and test avif feature
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install dav1d build dependencies
        run: sudo apt update && sudo apt install ninja-build meson nasm

      - name: Build
        run: cargo build --features avif

      - name: Test
        run: cargo test --features avif

      - name: Build (no threading)
        run: cargo build --no-default-features --features default_formats,avif

      - name: Test (no threading)
        run: cargo test --no-default-features --features default_formats,avif
